2023-02-08 15:07:37,505 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.13 (default, Mar 28 2022, 11:38:47) [GCC 7.5.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 3090
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.1, V11.1.105
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.8.2+cu111
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.9.2+cu111
OpenCV: 4.5.3
MMCV: 1.5.3
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 11.1
MMDetection: 2.28.1+
------------------------------------------------------------

2023-02-08 15:07:37,716 - mmdet - INFO - Distributed training: False
2023-02-08 15:07:37,913 - mmdet - INFO - Config:
model = dict(
    type='MaskRCNN',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch',
        init_cfg=dict(type='Pretrained', checkpoint='torchvision://resnet50')),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=20,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
        mask_roi_extractor=None,
        mask_head=None),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=-1,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.5,
                neg_iou_thr=0.5,
                min_pos_iou=0.5,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=512,
                pos_fraction=0.25,
                neg_pos_ub=-1,
                add_gt_as_proposals=True),
            mask_size=28,
            pos_weight=-1,
            debug=False)),
    test_cfg=dict(
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100,
            mask_thr_binary=0.5)))
dataset_type = 'VOCDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1000, 600), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1333, 800),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=8,
    workers_per_gpu=4,
    train=dict(
        type='VOCDataset',
        ann_file='PASCAL_VOC2012/PASCALVOC2012/ImageSets/Main/trainval.txt',
        img_prefix='PASCAL_VOC2012/PASCALVOC2012/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1000, 600), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='VOCDataset',
        ann_file='PASCAL_VOC2012/PASCALVOC2012/ImageSets/Main/trainval.txt',
        img_prefix='PASCAL_VOC2012/PASCALVOC2012/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='VOCDataset',
        ann_file='PASCAL_VOC2012/PASCALVOC2012/ImageSets/Main/trainval.txt',
        img_prefix='PASCAL_VOC2012/PASCALVOC2012/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(metric=['bbox', 'segm'])
optimizer = dict(type='SGD', lr=0.001, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = None
runner = dict(type='EpochBasedRunner', max_epochs=8)
checkpoint_config = dict(interval=1)
log_config = dict(interval=10, hooks=[dict(type='TextLoggerHook')])
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = 'mask_rcnn_r50_fpn_2x_coco_bbox_mAP-0.392__segm_mAP-0.354_20200505_003907-3e542a40.pth'
resume_from = None
workflow = [('train', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
auto_scale_lr = dict(enable=False, base_batch_size=16)
work_dir = './work_dirs/mask_rcnn_r50_fpn_2x_voc2021'
auto_resume = False
gpu_ids = range(0, 1)

2023-02-08 15:07:37,914 - mmdet - INFO - Set random seed to 1268595869, deterministic: False
2023-02-08 15:07:38,170 - mmdet - INFO - initialize ResNet with init_cfg {'type': 'Pretrained', 'checkpoint': 'torchvision://resnet50'}
2023-02-08 15:07:38,308 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2023-02-08 15:07:38,324 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2023-02-08 15:07:38,329 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from torchvision://resnet50 

backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

neck.lateral_convs.0.conv.weight - torch.Size([256, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.lateral_convs.1.conv.weight - torch.Size([256, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.lateral_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.lateral_convs.3.conv.weight - torch.Size([256, 2048, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

rpn_head.rpn_conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_conv.bias - torch.Size([256]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.weight - torch.Size([3, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.bias - torch.Size([3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.weight - torch.Size([12, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.bias - torch.Size([12]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.weight - torch.Size([21, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.bias - torch.Size([21]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_reg.weight - torch.Size([80, 1024]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.fc_reg.bias - torch.Size([80]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 
2023-02-08 15:07:41,539 - mmdet - INFO - Automatic scaling of learning rate (LR) has been disabled.
2023-02-08 15:07:42,014 - mmdet - INFO - load checkpoint from local path: mask_rcnn_r50_fpn_2x_coco_bbox_mAP-0.392__segm_mAP-0.354_20200505_003907-3e542a40.pth
2023-02-08 15:07:42,112 - mmdet - WARNING - The model and loaded state dict do not match exactly

size mismatch for roi_head.bbox_head.fc_cls.weight: copying a param with shape torch.Size([81, 1024]) from checkpoint, the shape in current model is torch.Size([21, 1024]).
size mismatch for roi_head.bbox_head.fc_cls.bias: copying a param with shape torch.Size([81]) from checkpoint, the shape in current model is torch.Size([21]).
size mismatch for roi_head.bbox_head.fc_reg.weight: copying a param with shape torch.Size([320, 1024]) from checkpoint, the shape in current model is torch.Size([80, 1024]).
size mismatch for roi_head.bbox_head.fc_reg.bias: copying a param with shape torch.Size([320]) from checkpoint, the shape in current model is torch.Size([80]).
unexpected key in source state_dict: roi_head.mask_head.convs.0.conv.weight, roi_head.mask_head.convs.0.conv.bias, roi_head.mask_head.convs.1.conv.weight, roi_head.mask_head.convs.1.conv.bias, roi_head.mask_head.convs.2.conv.weight, roi_head.mask_head.convs.2.conv.bias, roi_head.mask_head.convs.3.conv.weight, roi_head.mask_head.convs.3.conv.bias, roi_head.mask_head.upsample.weight, roi_head.mask_head.upsample.bias, roi_head.mask_head.conv_logits.weight, roi_head.mask_head.conv_logits.bias

2023-02-08 15:07:42,116 - mmdet - INFO - Start running, host: root@huizhao1-qk2mn2k1msqv-main, work_dir: /output/work_dirs/mask_rcnn_r50_fpn_2x_voc2021
2023-02-08 15:07:42,117 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-02-08 15:07:42,117 - mmdet - INFO - workflow: [('train', 1)], max: 8 epochs
2023-02-08 15:07:42,117 - mmdet - INFO - Checkpoints will be saved to /output/work_dirs/mask_rcnn_r50_fpn_2x_voc2021 by HardDiskBackend.
2023-02-08 15:07:54,635 - mmdet - INFO - Epoch [1][10/1443]	lr: 1.000e-03, eta: 3:57:19, time: 1.235, data_time: 0.278, memory: 8107, loss_rpn_cls: 0.0198, loss_rpn_bbox: 0.0109, loss_cls: 1.6388, acc: 72.0996, loss_bbox: 0.3065, loss: 1.9761
2023-02-08 15:08:04,236 - mmdet - INFO - Epoch [1][20/1443]	lr: 1.000e-03, eta: 3:30:42, time: 0.960, data_time: 0.026, memory: 8107, loss_rpn_cls: 0.0098, loss_rpn_bbox: 0.0128, loss_cls: 0.5656, acc: 92.1362, loss_bbox: 0.3066, loss: 0.8948
2023-02-08 15:08:13,449 - mmdet - INFO - Epoch [1][30/1443]	lr: 1.000e-03, eta: 3:19:52, time: 0.931, data_time: 0.026, memory: 8107, loss_rpn_cls: 0.0087, loss_rpn_bbox: 0.0090, loss_cls: 0.3802, acc: 92.9077, loss_bbox: 0.2780, loss: 0.6759
2023-02-08 15:08:22,917 - mmdet - INFO - Epoch [1][40/1443]	lr: 1.000e-03, eta: 3:14:40, time: 0.937, data_time: 0.017, memory: 8107, loss_rpn_cls: 0.0085, loss_rpn_bbox: 0.0104, loss_cls: 0.3247, acc: 92.7808, loss_bbox: 0.2840, loss: 0.6276
2023-02-08 15:08:32,202 - mmdet - INFO - Epoch [1][50/1443]	lr: 1.000e-03, eta: 3:11:14, time: 0.930, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0089, loss_rpn_bbox: 0.0084, loss_cls: 0.2860, acc: 93.6719, loss_bbox: 0.2488, loss: 0.5522
2023-02-08 15:08:42,060 - mmdet - INFO - Epoch [1][60/1443]	lr: 1.000e-03, eta: 3:10:38, time: 0.985, data_time: 0.026, memory: 8107, loss_rpn_cls: 0.0113, loss_rpn_bbox: 0.0103, loss_cls: 0.3224, acc: 92.4121, loss_bbox: 0.2951, loss: 0.6391
2023-02-08 15:08:52,190 - mmdet - INFO - Epoch [1][70/1443]	lr: 1.000e-03, eta: 3:10:57, time: 1.014, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0105, loss_rpn_bbox: 0.0106, loss_cls: 0.3411, acc: 91.7163, loss_bbox: 0.3214, loss: 0.6836
2023-02-08 15:09:00,887 - mmdet - INFO - Epoch [1][80/1443]	lr: 1.000e-03, eta: 3:07:42, time: 0.870, data_time: 0.026, memory: 8107, loss_rpn_cls: 0.0091, loss_rpn_bbox: 0.0108, loss_cls: 0.3015, acc: 92.6636, loss_bbox: 0.2878, loss: 0.6092
2023-02-08 15:09:10,055 - mmdet - INFO - Epoch [1][90/1443]	lr: 1.000e-03, eta: 3:06:09, time: 0.917, data_time: 0.026, memory: 8107, loss_rpn_cls: 0.0120, loss_rpn_bbox: 0.0102, loss_cls: 0.2664, acc: 93.4229, loss_bbox: 0.2598, loss: 0.5483
2023-02-08 15:09:18,302 - mmdet - INFO - Epoch [1][100/1443]	lr: 1.000e-03, eta: 3:03:16, time: 0.832, data_time: 0.026, memory: 8107, loss_rpn_cls: 0.0097, loss_rpn_bbox: 0.0109, loss_cls: 0.2876, acc: 93.0347, loss_bbox: 0.2708, loss: 0.5789
2023-02-08 15:09:28,188 - mmdet - INFO - Epoch [1][110/1443]	lr: 1.000e-03, eta: 3:03:27, time: 0.981, data_time: 0.019, memory: 8107, loss_rpn_cls: 0.0082, loss_rpn_bbox: 0.0100, loss_cls: 0.3319, acc: 91.7847, loss_bbox: 0.3295, loss: 0.6796
2023-02-08 15:09:37,955 - mmdet - INFO - Epoch [1][120/1443]	lr: 1.000e-03, eta: 3:03:31, time: 0.977, data_time: 0.026, memory: 8107, loss_rpn_cls: 0.0141, loss_rpn_bbox: 0.0113, loss_cls: 0.2913, acc: 92.8296, loss_bbox: 0.2840, loss: 0.6007
2023-02-08 15:09:47,339 - mmdet - INFO - Epoch [1][130/1443]	lr: 1.000e-03, eta: 3:02:59, time: 0.938, data_time: 0.026, memory: 8107, loss_rpn_cls: 0.0078, loss_rpn_bbox: 0.0118, loss_cls: 0.2829, acc: 93.0493, loss_bbox: 0.2800, loss: 0.5825
2023-02-08 15:09:56,810 - mmdet - INFO - Epoch [1][140/1443]	lr: 1.000e-03, eta: 3:02:36, time: 0.946, data_time: 0.026, memory: 8107, loss_rpn_cls: 0.0096, loss_rpn_bbox: 0.0108, loss_cls: 0.2694, acc: 93.5498, loss_bbox: 0.2769, loss: 0.5667
2023-02-08 15:10:06,626 - mmdet - INFO - Epoch [1][150/1443]	lr: 1.000e-03, eta: 3:02:43, time: 0.983, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0100, loss_rpn_bbox: 0.0100, loss_cls: 0.2608, acc: 93.4473, loss_bbox: 0.2730, loss: 0.5538
2023-02-08 15:10:15,970 - mmdet - INFO - Epoch [1][160/1443]	lr: 1.000e-03, eta: 3:02:14, time: 0.935, data_time: 0.026, memory: 8107, loss_rpn_cls: 0.0113, loss_rpn_bbox: 0.0097, loss_cls: 0.2465, acc: 94.1675, loss_bbox: 0.2502, loss: 0.5177
2023-02-08 15:10:25,345 - mmdet - INFO - Epoch [1][170/1443]	lr: 1.000e-03, eta: 3:01:49, time: 0.937, data_time: 0.026, memory: 8107, loss_rpn_cls: 0.0136, loss_rpn_bbox: 0.0137, loss_cls: 0.2698, acc: 93.4326, loss_bbox: 0.2773, loss: 0.5743
2023-02-08 15:10:35,325 - mmdet - INFO - Epoch [1][180/1443]	lr: 1.000e-03, eta: 3:02:04, time: 0.998, data_time: 0.026, memory: 8107, loss_rpn_cls: 0.0156, loss_rpn_bbox: 0.0110, loss_cls: 0.2376, acc: 94.0063, loss_bbox: 0.2567, loss: 0.5210
2023-02-08 15:10:44,192 - mmdet - INFO - Epoch [1][190/1443]	lr: 1.000e-03, eta: 3:01:09, time: 0.887, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0063, loss_rpn_bbox: 0.0108, loss_cls: 0.2248, acc: 94.0405, loss_bbox: 0.2495, loss: 0.4915
2023-02-08 15:10:54,046 - mmdet - INFO - Epoch [1][200/1443]	lr: 1.000e-03, eta: 3:01:16, time: 0.985, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0076, loss_rpn_bbox: 0.0102, loss_cls: 0.2383, acc: 93.6401, loss_bbox: 0.2579, loss: 0.5141
2023-02-08 15:11:03,409 - mmdet - INFO - Epoch [1][210/1443]	lr: 1.000e-03, eta: 3:00:53, time: 0.935, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0141, loss_rpn_bbox: 0.0121, loss_cls: 0.2483, acc: 93.9136, loss_bbox: 0.2571, loss: 0.5317
2023-02-08 15:11:12,241 - mmdet - INFO - Epoch [1][220/1443]	lr: 1.000e-03, eta: 3:00:06, time: 0.884, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0102, loss_rpn_bbox: 0.0127, loss_cls: 0.2423, acc: 93.6694, loss_bbox: 0.2594, loss: 0.5247
2023-02-08 15:11:22,633 - mmdet - INFO - Epoch [1][230/1443]	lr: 1.000e-03, eta: 3:00:38, time: 1.039, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0103, loss_rpn_bbox: 0.0131, loss_cls: 0.2799, acc: 92.2925, loss_bbox: 0.3032, loss: 0.6065
2023-02-08 15:11:32,623 - mmdet - INFO - Epoch [1][240/1443]	lr: 1.000e-03, eta: 3:00:48, time: 0.999, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0076, loss_rpn_bbox: 0.0103, loss_cls: 0.2004, acc: 94.4043, loss_bbox: 0.2258, loss: 0.4440
2023-02-08 15:11:42,215 - mmdet - INFO - Epoch [1][250/1443]	lr: 1.000e-03, eta: 3:00:38, time: 0.959, data_time: 0.026, memory: 8107, loss_rpn_cls: 0.0159, loss_rpn_bbox: 0.0140, loss_cls: 0.2405, acc: 93.7573, loss_bbox: 0.2614, loss: 0.5317
2023-02-08 15:11:52,064 - mmdet - INFO - Epoch [1][260/1443]	lr: 1.000e-03, eta: 3:00:43, time: 0.993, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0101, loss_rpn_bbox: 0.0130, loss_cls: 0.2408, acc: 93.8232, loss_bbox: 0.2631, loss: 0.5270
2023-02-08 15:12:01,796 - mmdet - INFO - Epoch [1][270/1443]	lr: 1.000e-03, eta: 3:00:35, time: 0.966, data_time: 0.019, memory: 8107, loss_rpn_cls: 0.0102, loss_rpn_bbox: 0.0132, loss_cls: 0.2302, acc: 94.0576, loss_bbox: 0.2586, loss: 0.5123
2023-02-08 15:12:11,718 - mmdet - INFO - Epoch [1][280/1443]	lr: 1.000e-03, eta: 3:00:38, time: 0.992, data_time: 0.026, memory: 8107, loss_rpn_cls: 0.0096, loss_rpn_bbox: 0.0120, loss_cls: 0.2180, acc: 94.3750, loss_bbox: 0.2413, loss: 0.4809
2023-02-08 15:12:20,407 - mmdet - INFO - Epoch [1][290/1443]	lr: 1.000e-03, eta: 2:59:53, time: 0.871, data_time: 0.026, memory: 8107, loss_rpn_cls: 0.0175, loss_rpn_bbox: 0.0121, loss_cls: 0.2345, acc: 94.0454, loss_bbox: 0.2551, loss: 0.5192
2023-02-08 15:12:29,533 - mmdet - INFO - Epoch [1][300/1443]	lr: 1.000e-03, eta: 2:59:25, time: 0.910, data_time: 0.024, memory: 8107, loss_rpn_cls: 0.0135, loss_rpn_bbox: 0.0125, loss_cls: 0.1949, acc: 94.8926, loss_bbox: 0.2252, loss: 0.4461
2023-02-08 15:12:38,685 - mmdet - INFO - Epoch [1][310/1443]	lr: 1.000e-03, eta: 2:59:01, time: 0.917, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0165, loss_rpn_bbox: 0.0141, loss_cls: 0.2314, acc: 94.0503, loss_bbox: 0.2710, loss: 0.5330
2023-02-08 15:12:48,080 - mmdet - INFO - Epoch [1][320/1443]	lr: 1.000e-03, eta: 2:58:48, time: 0.945, data_time: 0.025, memory: 8107, loss_rpn_cls: 0.0131, loss_rpn_bbox: 0.0140, loss_cls: 0.2158, acc: 93.7573, loss_bbox: 0.2557, loss: 0.4986
2023-02-08 15:12:57,579 - mmdet - INFO - Epoch [1][330/1443]	lr: 1.000e-03, eta: 2:58:33, time: 0.942, data_time: 0.019, memory: 8107, loss_rpn_cls: 0.0095, loss_rpn_bbox: 0.0109, loss_cls: 0.1718, acc: 95.2441, loss_bbox: 0.2135, loss: 0.4057
2023-02-08 15:13:07,441 - mmdet - INFO - Epoch [1][340/1443]	lr: 1.000e-03, eta: 2:58:34, time: 0.987, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0092, loss_rpn_bbox: 0.0112, loss_cls: 0.1676, acc: 95.3247, loss_bbox: 0.2099, loss: 0.3979
2023-02-08 15:13:16,818 - mmdet - INFO - Epoch [1][350/1443]	lr: 1.000e-03, eta: 2:58:18, time: 0.936, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0106, loss_rpn_bbox: 0.0094, loss_cls: 0.1608, acc: 95.7495, loss_bbox: 0.2068, loss: 0.3875
2023-02-08 15:13:23,959 - mmdet - INFO - Epoch [1][360/1443]	lr: 1.000e-03, eta: 2:56:56, time: 0.723, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0177, loss_rpn_bbox: 0.0121, loss_cls: 0.1670, acc: 95.4858, loss_bbox: 0.1884, loss: 0.3852
2023-02-08 15:13:33,792 - mmdet - INFO - Epoch [1][370/1443]	lr: 1.000e-03, eta: 2:56:57, time: 0.983, data_time: 0.019, memory: 8107, loss_rpn_cls: 0.0118, loss_rpn_bbox: 0.0126, loss_cls: 0.1758, acc: 95.1660, loss_bbox: 0.2216, loss: 0.4217
2023-02-08 15:13:43,149 - mmdet - INFO - Epoch [1][380/1443]	lr: 1.000e-03, eta: 2:56:41, time: 0.928, data_time: 0.019, memory: 8107, loss_rpn_cls: 0.0078, loss_rpn_bbox: 0.0106, loss_cls: 0.1399, acc: 95.8887, loss_bbox: 0.1867, loss: 0.3450
2023-02-08 15:13:52,422 - mmdet - INFO - Epoch [1][390/1443]	lr: 1.000e-03, eta: 2:56:25, time: 0.927, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0099, loss_rpn_bbox: 0.0104, loss_cls: 0.1343, acc: 96.0962, loss_bbox: 0.1801, loss: 0.3347
2023-02-08 15:14:01,667 - mmdet - INFO - Epoch [1][400/1443]	lr: 1.000e-03, eta: 2:56:09, time: 0.924, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0129, loss_rpn_bbox: 0.0131, loss_cls: 0.1475, acc: 95.6177, loss_bbox: 0.1908, loss: 0.3643
2023-02-08 15:14:09,946 - mmdet - INFO - Epoch [1][410/1443]	lr: 1.000e-03, eta: 2:55:27, time: 0.828, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0112, loss_rpn_bbox: 0.0124, loss_cls: 0.1585, acc: 95.5176, loss_bbox: 0.1865, loss: 0.3687
2023-02-08 15:14:18,726 - mmdet - INFO - Epoch [1][420/1443]	lr: 1.000e-03, eta: 2:54:59, time: 0.878, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0157, loss_rpn_bbox: 0.0142, loss_cls: 0.1503, acc: 95.5835, loss_bbox: 0.1902, loss: 0.3704
2023-02-08 15:14:27,979 - mmdet - INFO - Epoch [1][430/1443]	lr: 1.000e-03, eta: 2:54:46, time: 0.928, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0108, loss_rpn_bbox: 0.0115, loss_cls: 0.1305, acc: 96.0596, loss_bbox: 0.1738, loss: 0.3266
2023-02-08 15:14:36,129 - mmdet - INFO - Epoch [1][440/1443]	lr: 1.000e-03, eta: 2:54:05, time: 0.820, data_time: 0.024, memory: 8107, loss_rpn_cls: 0.0078, loss_rpn_bbox: 0.0117, loss_cls: 0.1305, acc: 95.7617, loss_bbox: 0.1801, loss: 0.3301
2023-02-08 15:14:45,332 - mmdet - INFO - Epoch [1][450/1443]	lr: 1.000e-03, eta: 2:53:49, time: 0.913, data_time: 0.019, memory: 8107, loss_rpn_cls: 0.0102, loss_rpn_bbox: 0.0141, loss_cls: 0.1410, acc: 95.6616, loss_bbox: 0.1959, loss: 0.3612
2023-02-08 15:14:54,759 - mmdet - INFO - Epoch [1][460/1443]	lr: 1.000e-03, eta: 2:53:40, time: 0.941, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0116, loss_rpn_bbox: 0.0137, loss_cls: 0.1371, acc: 95.7251, loss_bbox: 0.1827, loss: 0.3451
2023-02-08 15:15:04,758 - mmdet - INFO - Epoch [1][470/1443]	lr: 1.000e-03, eta: 2:53:45, time: 1.001, data_time: 0.029, memory: 8107, loss_rpn_cls: 0.0106, loss_rpn_bbox: 0.0115, loss_cls: 0.1538, acc: 95.5737, loss_bbox: 0.2023, loss: 0.3782
2023-02-08 15:15:13,612 - mmdet - INFO - Epoch [1][480/1443]	lr: 1.000e-03, eta: 2:53:22, time: 0.884, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0175, loss_rpn_bbox: 0.0134, loss_cls: 0.1373, acc: 95.8838, loss_bbox: 0.1853, loss: 0.3535
2023-02-08 15:15:21,863 - mmdet - INFO - Epoch [1][490/1443]	lr: 1.000e-03, eta: 2:52:47, time: 0.826, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0080, loss_rpn_bbox: 0.0101, loss_cls: 0.1007, acc: 96.6309, loss_bbox: 0.1370, loss: 0.2558
2023-02-08 15:15:30,007 - mmdet - INFO - Epoch [1][500/1443]	lr: 1.000e-03, eta: 2:52:10, time: 0.814, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0132, loss_rpn_bbox: 0.0116, loss_cls: 0.1104, acc: 96.6357, loss_bbox: 0.1446, loss: 0.2798
2023-02-08 15:15:39,375 - mmdet - INFO - Epoch [1][510/1443]	lr: 1.000e-03, eta: 2:52:01, time: 0.937, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0273, loss_rpn_bbox: 0.0140, loss_cls: 0.1131, acc: 96.4038, loss_bbox: 0.1547, loss: 0.3091
2023-02-08 15:15:47,502 - mmdet - INFO - Epoch [1][520/1443]	lr: 1.000e-03, eta: 2:51:28, time: 0.821, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0144, loss_rpn_bbox: 0.0116, loss_cls: 0.1160, acc: 96.1646, loss_bbox: 0.1827, loss: 0.3247
2023-02-08 15:15:57,348 - mmdet - INFO - Epoch [1][530/1443]	lr: 1.000e-03, eta: 2:51:27, time: 0.977, data_time: 0.020, memory: 8107, loss_rpn_cls: 0.0113, loss_rpn_bbox: 0.0112, loss_cls: 0.1052, acc: 96.6211, loss_bbox: 0.1371, loss: 0.2648
2023-02-08 15:16:07,666 - mmdet - INFO - Epoch [1][540/1443]	lr: 1.000e-03, eta: 2:51:38, time: 1.032, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0127, loss_rpn_bbox: 0.0133, loss_cls: 0.1193, acc: 96.1841, loss_bbox: 0.1642, loss: 0.3096
2023-02-08 15:16:15,857 - mmdet - INFO - Epoch [1][550/1443]	lr: 1.000e-03, eta: 2:51:07, time: 0.826, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0119, loss_rpn_bbox: 0.0112, loss_cls: 0.1087, acc: 96.6260, loss_bbox: 0.1475, loss: 0.2793
2023-02-08 15:16:25,828 - mmdet - INFO - Epoch [1][560/1443]	lr: 1.000e-03, eta: 2:51:10, time: 0.997, data_time: 0.020, memory: 8107, loss_rpn_cls: 0.0070, loss_rpn_bbox: 0.0128, loss_cls: 0.1161, acc: 96.2085, loss_bbox: 0.1643, loss: 0.3001
2023-02-08 15:16:35,106 - mmdet - INFO - Epoch [1][570/1443]	lr: 1.000e-03, eta: 2:50:57, time: 0.920, data_time: 0.020, memory: 8107, loss_rpn_cls: 0.0129, loss_rpn_bbox: 0.0134, loss_cls: 0.1148, acc: 96.2378, loss_bbox: 0.1561, loss: 0.2972
2023-02-08 15:16:43,326 - mmdet - INFO - Epoch [1][580/1443]	lr: 1.000e-03, eta: 2:50:27, time: 0.822, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0170, loss_rpn_bbox: 0.0122, loss_cls: 0.1039, acc: 96.6797, loss_bbox: 0.1387, loss: 0.2719
2023-02-08 15:16:53,168 - mmdet - INFO - Epoch [1][590/1443]	lr: 1.000e-03, eta: 2:50:27, time: 0.986, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0164, loss_rpn_bbox: 0.0129, loss_cls: 0.1125, acc: 96.2183, loss_bbox: 0.1561, loss: 0.2978
2023-02-08 15:17:01,936 - mmdet - INFO - Epoch [1][600/1443]	lr: 1.000e-03, eta: 2:50:07, time: 0.877, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0200, loss_rpn_bbox: 0.0103, loss_cls: 0.1149, acc: 96.5283, loss_bbox: 0.1384, loss: 0.2835
2023-02-08 15:17:09,609 - mmdet - INFO - Epoch [1][610/1443]	lr: 1.000e-03, eta: 2:49:30, time: 0.775, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0070, loss_rpn_bbox: 0.0093, loss_cls: 0.0830, acc: 97.2192, loss_bbox: 0.1241, loss: 0.2235
2023-02-08 15:17:17,633 - mmdet - INFO - Epoch [1][620/1443]	lr: 1.000e-03, eta: 2:48:57, time: 0.795, data_time: 0.020, memory: 8107, loss_rpn_cls: 0.0081, loss_rpn_bbox: 0.0106, loss_cls: 0.0966, acc: 96.6626, loss_bbox: 0.1369, loss: 0.2522
2023-02-08 15:17:26,884 - mmdet - INFO - Epoch [1][630/1443]	lr: 1.000e-03, eta: 2:48:47, time: 0.925, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0077, loss_rpn_bbox: 0.0119, loss_cls: 0.0929, acc: 96.8530, loss_bbox: 0.1367, loss: 0.2492
2023-02-08 15:17:35,452 - mmdet - INFO - Epoch [1][640/1443]	lr: 1.000e-03, eta: 2:48:26, time: 0.860, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0090, loss_rpn_bbox: 0.0127, loss_cls: 0.1114, acc: 96.1890, loss_bbox: 0.1583, loss: 0.2914
2023-02-08 15:17:45,395 - mmdet - INFO - Epoch [1][650/1443]	lr: 1.000e-03, eta: 2:48:27, time: 0.992, data_time: 0.025, memory: 8107, loss_rpn_cls: 0.0141, loss_rpn_bbox: 0.0127, loss_cls: 0.1175, acc: 96.1182, loss_bbox: 0.1490, loss: 0.2933
2023-02-08 15:17:55,273 - mmdet - INFO - Epoch [1][660/1443]	lr: 1.000e-03, eta: 2:48:28, time: 0.988, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0164, loss_rpn_bbox: 0.0130, loss_cls: 0.1064, acc: 96.4087, loss_bbox: 0.1476, loss: 0.2834
2023-02-08 15:18:04,574 - mmdet - INFO - Epoch [1][670/1443]	lr: 1.000e-03, eta: 2:48:19, time: 0.930, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0118, loss_rpn_bbox: 0.0111, loss_cls: 0.1160, acc: 96.0474, loss_bbox: 0.1591, loss: 0.2980
2023-02-08 15:18:12,268 - mmdet - INFO - Epoch [1][680/1443]	lr: 1.000e-03, eta: 2:47:45, time: 0.777, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0076, loss_rpn_bbox: 0.0118, loss_cls: 0.1065, acc: 96.2720, loss_bbox: 0.1500, loss: 0.2758
2023-02-08 15:18:21,682 - mmdet - INFO - Epoch [1][690/1443]	lr: 1.000e-03, eta: 2:47:37, time: 0.934, data_time: 0.020, memory: 8107, loss_rpn_cls: 0.0075, loss_rpn_bbox: 0.0117, loss_cls: 0.1131, acc: 96.1523, loss_bbox: 0.1544, loss: 0.2868
2023-02-08 15:18:31,115 - mmdet - INFO - Epoch [1][700/1443]	lr: 1.000e-03, eta: 2:47:32, time: 0.951, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0074, loss_rpn_bbox: 0.0138, loss_cls: 0.0983, acc: 96.4648, loss_bbox: 0.1482, loss: 0.2677
2023-02-08 15:18:41,092 - mmdet - INFO - Epoch [1][710/1443]	lr: 1.000e-03, eta: 2:47:33, time: 0.997, data_time: 0.020, memory: 8107, loss_rpn_cls: 0.0081, loss_rpn_bbox: 0.0112, loss_cls: 0.0982, acc: 96.6504, loss_bbox: 0.1332, loss: 0.2507
2023-02-08 15:18:51,532 - mmdet - INFO - Epoch [1][720/1443]	lr: 1.000e-03, eta: 2:47:40, time: 1.035, data_time: 0.020, memory: 8107, loss_rpn_cls: 0.0078, loss_rpn_bbox: 0.0120, loss_cls: 0.1214, acc: 95.9204, loss_bbox: 0.1580, loss: 0.2992
2023-02-08 15:19:00,329 - mmdet - INFO - Epoch [1][730/1443]	lr: 1.000e-03, eta: 2:47:24, time: 0.882, data_time: 0.029, memory: 8107, loss_rpn_cls: 0.0105, loss_rpn_bbox: 0.0118, loss_cls: 0.1221, acc: 95.8032, loss_bbox: 0.1530, loss: 0.2974
2023-02-08 15:19:09,980 - mmdet - INFO - Epoch [1][740/1443]	lr: 1.000e-03, eta: 2:47:20, time: 0.964, data_time: 0.026, memory: 8107, loss_rpn_cls: 0.0129, loss_rpn_bbox: 0.0130, loss_cls: 0.1166, acc: 95.9155, loss_bbox: 0.1705, loss: 0.3129
2023-02-08 15:19:19,375 - mmdet - INFO - Epoch [1][750/1443]	lr: 1.000e-03, eta: 2:47:13, time: 0.947, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0092, loss_rpn_bbox: 0.0110, loss_cls: 0.1123, acc: 96.1694, loss_bbox: 0.1585, loss: 0.2910
2023-02-08 15:19:29,214 - mmdet - INFO - Epoch [1][760/1443]	lr: 1.000e-03, eta: 2:47:10, time: 0.976, data_time: 0.020, memory: 8107, loss_rpn_cls: 0.0173, loss_rpn_bbox: 0.0141, loss_cls: 0.1267, acc: 95.8301, loss_bbox: 0.1549, loss: 0.3130
2023-02-08 15:19:39,704 - mmdet - INFO - Epoch [1][770/1443]	lr: 1.000e-03, eta: 2:47:18, time: 1.049, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0172, loss_rpn_bbox: 0.0131, loss_cls: 0.1145, acc: 96.1157, loss_bbox: 0.1595, loss: 0.3043
2023-02-08 15:19:49,185 - mmdet - INFO - Epoch [1][780/1443]	lr: 1.000e-03, eta: 2:47:12, time: 0.956, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0094, loss_rpn_bbox: 0.0109, loss_cls: 0.0912, acc: 96.9263, loss_bbox: 0.1236, loss: 0.2350
2023-02-08 15:19:58,573 - mmdet - INFO - Epoch [1][790/1443]	lr: 1.000e-03, eta: 2:47:02, time: 0.931, data_time: 0.020, memory: 8107, loss_rpn_cls: 0.0081, loss_rpn_bbox: 0.0090, loss_cls: 0.0897, acc: 96.8213, loss_bbox: 0.1311, loss: 0.2379
2023-02-08 15:20:07,332 - mmdet - INFO - Epoch [1][800/1443]	lr: 1.000e-03, eta: 2:46:45, time: 0.877, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0092, loss_rpn_bbox: 0.0106, loss_cls: 0.1060, acc: 96.3477, loss_bbox: 0.1305, loss: 0.2562
2023-02-08 15:20:16,659 - mmdet - INFO - Epoch [1][810/1443]	lr: 1.000e-03, eta: 2:46:36, time: 0.932, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0121, loss_rpn_bbox: 0.0103, loss_cls: 0.0993, acc: 96.5674, loss_bbox: 0.1308, loss: 0.2525
2023-02-08 15:20:27,172 - mmdet - INFO - Epoch [1][820/1443]	lr: 1.000e-03, eta: 2:46:42, time: 1.050, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0132, loss_rpn_bbox: 0.0129, loss_cls: 0.1174, acc: 95.9741, loss_bbox: 0.1532, loss: 0.2967
2023-02-08 15:20:37,155 - mmdet - INFO - Epoch [1][830/1443]	lr: 1.000e-03, eta: 2:46:42, time: 1.000, data_time: 0.029, memory: 8107, loss_rpn_cls: 0.0082, loss_rpn_bbox: 0.0135, loss_cls: 0.1190, acc: 95.6592, loss_bbox: 0.1733, loss: 0.3139
2023-02-08 15:20:46,481 - mmdet - INFO - Epoch [1][840/1443]	lr: 1.000e-03, eta: 2:46:32, time: 0.931, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0164, loss_rpn_bbox: 0.0135, loss_cls: 0.0891, acc: 96.8433, loss_bbox: 0.1363, loss: 0.2553
2023-02-08 15:20:55,852 - mmdet - INFO - Epoch [1][850/1443]	lr: 1.000e-03, eta: 2:46:23, time: 0.938, data_time: 0.029, memory: 8107, loss_rpn_cls: 0.0063, loss_rpn_bbox: 0.0096, loss_cls: 0.0985, acc: 96.6113, loss_bbox: 0.1274, loss: 0.2418
2023-02-08 15:21:04,085 - mmdet - INFO - Epoch [1][860/1443]	lr: 1.000e-03, eta: 2:46:01, time: 0.831, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0089, loss_rpn_bbox: 0.0113, loss_cls: 0.0931, acc: 96.7651, loss_bbox: 0.1262, loss: 0.2395
2023-02-08 15:21:12,876 - mmdet - INFO - Epoch [1][870/1443]	lr: 1.000e-03, eta: 2:45:44, time: 0.872, data_time: 0.020, memory: 8107, loss_rpn_cls: 0.0301, loss_rpn_bbox: 0.0122, loss_cls: 0.1032, acc: 96.4209, loss_bbox: 0.1373, loss: 0.2828
2023-02-08 15:21:22,765 - mmdet - INFO - Epoch [1][880/1443]	lr: 1.000e-03, eta: 2:45:42, time: 0.989, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0086, loss_rpn_bbox: 0.0104, loss_cls: 0.0948, acc: 96.8140, loss_bbox: 0.1255, loss: 0.2392
2023-02-08 15:21:30,967 - mmdet - INFO - Epoch [1][890/1443]	lr: 1.000e-03, eta: 2:45:19, time: 0.820, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0175, loss_rpn_bbox: 0.0149, loss_cls: 0.1059, acc: 96.2988, loss_bbox: 0.1344, loss: 0.2726
2023-02-08 15:21:39,613 - mmdet - INFO - Epoch [1][900/1443]	lr: 1.000e-03, eta: 2:45:03, time: 0.871, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0108, loss_rpn_bbox: 0.0141, loss_cls: 0.0999, acc: 96.5747, loss_bbox: 0.1319, loss: 0.2568
2023-02-08 15:21:50,123 - mmdet - INFO - Epoch [1][910/1443]	lr: 1.000e-03, eta: 2:45:07, time: 1.044, data_time: 0.020, memory: 8107, loss_rpn_cls: 0.0151, loss_rpn_bbox: 0.0148, loss_cls: 0.1288, acc: 95.6592, loss_bbox: 0.1590, loss: 0.3178
2023-02-08 15:21:56,673 - mmdet - INFO - Epoch [1][920/1443]	lr: 1.000e-03, eta: 2:44:27, time: 0.663, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0090, loss_rpn_bbox: 0.0098, loss_cls: 0.0838, acc: 97.1802, loss_bbox: 0.1054, loss: 0.2079
2023-02-08 15:22:06,019 - mmdet - INFO - Epoch [1][930/1443]	lr: 1.000e-03, eta: 2:44:17, time: 0.926, data_time: 0.020, memory: 8107, loss_rpn_cls: 0.0110, loss_rpn_bbox: 0.0139, loss_cls: 0.1258, acc: 95.6128, loss_bbox: 0.1678, loss: 0.3185
2023-02-08 15:22:15,247 - mmdet - INFO - Epoch [1][940/1443]	lr: 1.000e-03, eta: 2:44:07, time: 0.924, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0118, loss_rpn_bbox: 0.0154, loss_cls: 0.1205, acc: 95.9595, loss_bbox: 0.1456, loss: 0.2933
2023-02-08 15:22:24,342 - mmdet - INFO - Epoch [1][950/1443]	lr: 1.000e-03, eta: 2:43:56, time: 0.910, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0090, loss_rpn_bbox: 0.0096, loss_cls: 0.0877, acc: 97.1362, loss_bbox: 0.1133, loss: 0.2196
2023-02-08 15:22:31,910 - mmdet - INFO - Epoch [1][960/1443]	lr: 1.000e-03, eta: 2:43:28, time: 0.757, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0101, loss_rpn_bbox: 0.0098, loss_cls: 0.0848, acc: 97.1533, loss_bbox: 0.1071, loss: 0.2117
2023-02-08 15:22:41,262 - mmdet - INFO - Epoch [1][970/1443]	lr: 1.000e-03, eta: 2:43:19, time: 0.935, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0113, loss_rpn_bbox: 0.0118, loss_cls: 0.1085, acc: 96.4941, loss_bbox: 0.1441, loss: 0.2758
2023-02-08 15:22:50,627 - mmdet - INFO - Epoch [1][980/1443]	lr: 1.000e-03, eta: 2:43:12, time: 0.944, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0078, loss_rpn_bbox: 0.0121, loss_cls: 0.0836, acc: 97.1875, loss_bbox: 0.1101, loss: 0.2135
2023-02-08 15:22:59,464 - mmdet - INFO - Epoch [1][990/1443]	lr: 1.000e-03, eta: 2:42:57, time: 0.876, data_time: 0.020, memory: 8107, loss_rpn_cls: 0.0071, loss_rpn_bbox: 0.0121, loss_cls: 0.1053, acc: 96.2402, loss_bbox: 0.1355, loss: 0.2599
2023-02-08 15:23:09,406 - mmdet - INFO - Exp name: mask_rcnn_r50_fpn_2x_voc2021.py
2023-02-08 15:23:09,406 - mmdet - INFO - Epoch [1][1000/1443]	lr: 1.000e-03, eta: 2:42:55, time: 0.994, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0074, loss_rpn_bbox: 0.0107, loss_cls: 0.1016, acc: 96.4087, loss_bbox: 0.1349, loss: 0.2546
2023-02-08 15:23:18,672 - mmdet - INFO - Epoch [1][1010/1443]	lr: 1.000e-03, eta: 2:42:46, time: 0.927, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0065, loss_rpn_bbox: 0.0121, loss_cls: 0.1218, acc: 95.6543, loss_bbox: 0.1662, loss: 0.3066
2023-02-08 15:23:29,096 - mmdet - INFO - Epoch [1][1020/1443]	lr: 1.000e-03, eta: 2:42:48, time: 1.042, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0106, loss_rpn_bbox: 0.0119, loss_cls: 0.0931, acc: 96.8530, loss_bbox: 0.1261, loss: 0.2418
2023-02-08 15:23:38,675 - mmdet - INFO - Epoch [1][1030/1443]	lr: 1.000e-03, eta: 2:42:42, time: 0.958, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0057, loss_rpn_bbox: 0.0111, loss_cls: 0.0977, acc: 96.7847, loss_bbox: 0.1170, loss: 0.2315
2023-02-08 15:23:48,728 - mmdet - INFO - Epoch [1][1040/1443]	lr: 1.000e-03, eta: 2:42:40, time: 1.005, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0091, loss_rpn_bbox: 0.0132, loss_cls: 0.1061, acc: 96.4282, loss_bbox: 0.1377, loss: 0.2661
2023-02-08 15:23:59,234 - mmdet - INFO - Epoch [1][1050/1443]	lr: 1.000e-03, eta: 2:42:43, time: 1.050, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0083, loss_rpn_bbox: 0.0108, loss_cls: 0.1049, acc: 96.4697, loss_bbox: 0.1348, loss: 0.2588
2023-02-08 15:24:09,105 - mmdet - INFO - Epoch [1][1060/1443]	lr: 1.000e-03, eta: 2:42:40, time: 0.995, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0083, loss_rpn_bbox: 0.0120, loss_cls: 0.0938, acc: 96.6455, loss_bbox: 0.1252, loss: 0.2392
2023-02-08 15:24:18,562 - mmdet - INFO - Epoch [1][1070/1443]	lr: 1.000e-03, eta: 2:42:32, time: 0.937, data_time: 0.020, memory: 8107, loss_rpn_cls: 0.0104, loss_rpn_bbox: 0.0107, loss_cls: 0.0853, acc: 97.0630, loss_bbox: 0.1133, loss: 0.2198
2023-02-08 15:24:27,916 - mmdet - INFO - Epoch [1][1080/1443]	lr: 1.000e-03, eta: 2:42:23, time: 0.935, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0084, loss_rpn_bbox: 0.0100, loss_cls: 0.0888, acc: 97.0142, loss_bbox: 0.1199, loss: 0.2272
2023-02-08 15:24:35,631 - mmdet - INFO - Epoch [1][1090/1443]	lr: 1.000e-03, eta: 2:41:58, time: 0.771, data_time: 0.029, memory: 8107, loss_rpn_cls: 0.0094, loss_rpn_bbox: 0.0118, loss_cls: 0.1008, acc: 96.6235, loss_bbox: 0.1313, loss: 0.2534
2023-02-08 15:24:45,307 - mmdet - INFO - Epoch [1][1100/1443]	lr: 1.000e-03, eta: 2:41:52, time: 0.968, data_time: 0.029, memory: 8107, loss_rpn_cls: 0.0148, loss_rpn_bbox: 0.0128, loss_cls: 0.1121, acc: 96.1597, loss_bbox: 0.1485, loss: 0.2882
2023-02-08 15:24:55,182 - mmdet - INFO - Epoch [1][1110/1443]	lr: 1.000e-03, eta: 2:41:49, time: 0.988, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0052, loss_rpn_bbox: 0.0131, loss_cls: 0.0929, acc: 96.7310, loss_bbox: 0.1348, loss: 0.2460
2023-02-08 15:25:05,001 - mmdet - INFO - Epoch [1][1120/1443]	lr: 1.000e-03, eta: 2:41:44, time: 0.982, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0118, loss_rpn_bbox: 0.0128, loss_cls: 0.1081, acc: 96.4697, loss_bbox: 0.1295, loss: 0.2622
2023-02-08 15:25:15,484 - mmdet - INFO - Epoch [1][1130/1443]	lr: 1.000e-03, eta: 2:41:45, time: 1.047, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0116, loss_rpn_bbox: 0.0139, loss_cls: 0.1043, acc: 96.3794, loss_bbox: 0.1427, loss: 0.2724
2023-02-08 15:25:25,333 - mmdet - INFO - Epoch [1][1140/1443]	lr: 1.000e-03, eta: 2:41:41, time: 0.986, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0103, loss_rpn_bbox: 0.0125, loss_cls: 0.1075, acc: 96.3281, loss_bbox: 0.1470, loss: 0.2772
2023-02-08 15:25:33,499 - mmdet - INFO - Epoch [1][1150/1443]	lr: 1.000e-03, eta: 2:41:21, time: 0.815, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0126, loss_rpn_bbox: 0.0103, loss_cls: 0.0946, acc: 96.7310, loss_bbox: 0.1164, loss: 0.2340
2023-02-08 15:25:42,563 - mmdet - INFO - Epoch [1][1160/1443]	lr: 1.000e-03, eta: 2:41:10, time: 0.909, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0153, loss_rpn_bbox: 0.0139, loss_cls: 0.1239, acc: 95.8374, loss_bbox: 0.1445, loss: 0.2977
2023-02-08 15:25:51,844 - mmdet - INFO - Epoch [1][1170/1443]	lr: 1.000e-03, eta: 2:41:00, time: 0.926, data_time: 0.026, memory: 8107, loss_rpn_cls: 0.0094, loss_rpn_bbox: 0.0120, loss_cls: 0.1022, acc: 96.4722, loss_bbox: 0.1306, loss: 0.2542
2023-02-08 15:26:00,588 - mmdet - INFO - Epoch [1][1180/1443]	lr: 1.000e-03, eta: 2:40:46, time: 0.874, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0072, loss_rpn_bbox: 0.0107, loss_cls: 0.0826, acc: 97.1777, loss_bbox: 0.1161, loss: 0.2166
2023-02-08 15:26:10,450 - mmdet - INFO - Epoch [1][1190/1443]	lr: 1.000e-03, eta: 2:40:41, time: 0.987, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0153, loss_rpn_bbox: 0.0119, loss_cls: 0.0998, acc: 96.7896, loss_bbox: 0.1216, loss: 0.2487
2023-02-08 15:26:20,373 - mmdet - INFO - Epoch [1][1200/1443]	lr: 1.000e-03, eta: 2:40:37, time: 0.991, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0099, loss_rpn_bbox: 0.0112, loss_cls: 0.0955, acc: 96.7163, loss_bbox: 0.1183, loss: 0.2349
2023-02-08 15:26:29,178 - mmdet - INFO - Epoch [1][1210/1443]	lr: 1.000e-03, eta: 2:40:24, time: 0.882, data_time: 0.029, memory: 8107, loss_rpn_cls: 0.0113, loss_rpn_bbox: 0.0101, loss_cls: 0.1002, acc: 96.4795, loss_bbox: 0.1236, loss: 0.2452
2023-02-08 15:26:38,527 - mmdet - INFO - Epoch [1][1220/1443]	lr: 1.000e-03, eta: 2:40:15, time: 0.935, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0108, loss_rpn_bbox: 0.0107, loss_cls: 0.0884, acc: 96.9873, loss_bbox: 0.1164, loss: 0.2263
2023-02-08 15:26:47,892 - mmdet - INFO - Epoch [1][1230/1443]	lr: 1.000e-03, eta: 2:40:06, time: 0.944, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0135, loss_rpn_bbox: 0.0145, loss_cls: 0.1237, acc: 95.7300, loss_bbox: 0.1466, loss: 0.2983
2023-02-08 15:26:57,014 - mmdet - INFO - Epoch [1][1240/1443]	lr: 1.000e-03, eta: 2:39:55, time: 0.905, data_time: 0.019, memory: 8107, loss_rpn_cls: 0.0101, loss_rpn_bbox: 0.0102, loss_cls: 0.0959, acc: 96.8384, loss_bbox: 0.1145, loss: 0.2307
2023-02-08 15:27:06,739 - mmdet - INFO - Epoch [1][1250/1443]	lr: 1.000e-03, eta: 2:39:49, time: 0.971, data_time: 0.026, memory: 8107, loss_rpn_cls: 0.0061, loss_rpn_bbox: 0.0097, loss_cls: 0.0876, acc: 96.8701, loss_bbox: 0.1114, loss: 0.2147
2023-02-08 15:27:15,526 - mmdet - INFO - Epoch [1][1260/1443]	lr: 1.000e-03, eta: 2:39:35, time: 0.881, data_time: 0.029, memory: 8107, loss_rpn_cls: 0.0172, loss_rpn_bbox: 0.0126, loss_cls: 0.1039, acc: 96.4844, loss_bbox: 0.1398, loss: 0.2736
2023-02-08 15:27:24,877 - mmdet - INFO - Epoch [1][1270/1443]	lr: 1.000e-03, eta: 2:39:26, time: 0.934, data_time: 0.026, memory: 8107, loss_rpn_cls: 0.0061, loss_rpn_bbox: 0.0095, loss_cls: 0.0828, acc: 96.9556, loss_bbox: 0.1147, loss: 0.2130
2023-02-08 15:27:34,753 - mmdet - INFO - Epoch [1][1280/1443]	lr: 1.000e-03, eta: 2:39:22, time: 0.995, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0068, loss_rpn_bbox: 0.0108, loss_cls: 0.1130, acc: 95.9131, loss_bbox: 0.1367, loss: 0.2673
2023-02-08 15:27:43,484 - mmdet - INFO - Epoch [1][1290/1443]	lr: 1.000e-03, eta: 2:39:08, time: 0.866, data_time: 0.020, memory: 8107, loss_rpn_cls: 0.0126, loss_rpn_bbox: 0.0129, loss_cls: 0.1043, acc: 96.2280, loss_bbox: 0.1488, loss: 0.2786
2023-02-08 15:27:53,388 - mmdet - INFO - Epoch [1][1300/1443]	lr: 1.000e-03, eta: 2:39:03, time: 0.989, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0193, loss_rpn_bbox: 0.0155, loss_cls: 0.0917, acc: 96.6943, loss_bbox: 0.1132, loss: 0.2397
2023-02-08 15:28:02,695 - mmdet - INFO - Epoch [1][1310/1443]	lr: 1.000e-03, eta: 2:38:54, time: 0.932, data_time: 0.029, memory: 8107, loss_rpn_cls: 0.0151, loss_rpn_bbox: 0.0122, loss_cls: 0.1171, acc: 96.1694, loss_bbox: 0.1436, loss: 0.2881
2023-02-08 15:28:12,525 - mmdet - INFO - Epoch [1][1320/1443]	lr: 1.000e-03, eta: 2:38:48, time: 0.983, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0092, loss_rpn_bbox: 0.0119, loss_cls: 0.1037, acc: 96.4380, loss_bbox: 0.1431, loss: 0.2679
2023-02-08 15:28:22,956 - mmdet - INFO - Epoch [1][1330/1443]	lr: 1.000e-03, eta: 2:38:47, time: 1.043, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0077, loss_rpn_bbox: 0.0109, loss_cls: 0.1073, acc: 96.2671, loss_bbox: 0.1417, loss: 0.2676
2023-02-08 15:28:31,141 - mmdet - INFO - Epoch [1][1340/1443]	lr: 1.000e-03, eta: 2:38:29, time: 0.818, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0083, loss_rpn_bbox: 0.0119, loss_cls: 0.0963, acc: 96.3892, loss_bbox: 0.1306, loss: 0.2471
2023-02-08 15:28:40,584 - mmdet - INFO - Epoch [1][1350/1443]	lr: 1.000e-03, eta: 2:38:21, time: 0.944, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0066, loss_rpn_bbox: 0.0093, loss_cls: 0.0942, acc: 96.6431, loss_bbox: 0.1188, loss: 0.2289
2023-02-08 15:28:49,376 - mmdet - INFO - Epoch [1][1360/1443]	lr: 1.000e-03, eta: 2:38:08, time: 0.878, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0062, loss_rpn_bbox: 0.0098, loss_cls: 0.0919, acc: 97.1191, loss_bbox: 0.1125, loss: 0.2204
2023-02-08 15:28:58,138 - mmdet - INFO - Epoch [1][1370/1443]	lr: 1.000e-03, eta: 2:37:54, time: 0.877, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0141, loss_rpn_bbox: 0.0127, loss_cls: 0.1167, acc: 95.7983, loss_bbox: 0.1448, loss: 0.2883
2023-02-08 15:29:08,576 - mmdet - INFO - Epoch [1][1380/1443]	lr: 1.000e-03, eta: 2:37:53, time: 1.044, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0107, loss_rpn_bbox: 0.0148, loss_cls: 0.1048, acc: 96.4917, loss_bbox: 0.1328, loss: 0.2631
2023-02-08 15:29:17,187 - mmdet - INFO - Epoch [1][1390/1443]	lr: 1.000e-03, eta: 2:37:39, time: 0.870, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0129, loss_rpn_bbox: 0.0090, loss_cls: 0.1007, acc: 96.9043, loss_bbox: 0.1100, loss: 0.2326
2023-02-08 15:29:26,546 - mmdet - INFO - Epoch [1][1400/1443]	lr: 1.000e-03, eta: 2:37:30, time: 0.927, data_time: 0.018, memory: 8107, loss_rpn_cls: 0.0080, loss_rpn_bbox: 0.0104, loss_cls: 0.0947, acc: 96.6846, loss_bbox: 0.1172, loss: 0.2302
2023-02-08 15:29:37,043 - mmdet - INFO - Epoch [1][1410/1443]	lr: 1.000e-03, eta: 2:37:29, time: 1.050, data_time: 0.028, memory: 8107, loss_rpn_cls: 0.0107, loss_rpn_bbox: 0.0121, loss_cls: 0.1198, acc: 95.9131, loss_bbox: 0.1538, loss: 0.2963
2023-02-08 15:29:45,801 - mmdet - INFO - Epoch [1][1420/1443]	lr: 1.000e-03, eta: 2:37:16, time: 0.883, data_time: 0.027, memory: 8107, loss_rpn_cls: 0.0082, loss_rpn_bbox: 0.0113, loss_cls: 0.1057, acc: 96.3525, loss_bbox: 0.1368, loss: 0.2621
2023-02-08 15:29:53,564 - mmdet - INFO - Epoch [1][1430/1443]	lr: 1.000e-03, eta: 2:36:56, time: 0.776, data_time: 0.020, memory: 8107, loss_rpn_cls: 0.0159, loss_rpn_bbox: 0.0109, loss_cls: 0.0957, acc: 96.8530, loss_bbox: 0.1167, loss: 0.2391
2023-02-08 15:30:03,495 - mmdet - INFO - Epoch [1][1440/1443]	lr: 1.000e-03, eta: 2:36:50, time: 0.985, data_time: 0.020, memory: 8107, loss_rpn_cls: 0.0132, loss_rpn_bbox: 0.0156, loss_cls: 0.1096, acc: 96.1255, loss_bbox: 0.1581, loss: 0.2965
2023-02-08 15:30:06,562 - mmdet - INFO - Saving checkpoint at 1 epochs
